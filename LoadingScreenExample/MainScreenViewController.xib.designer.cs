// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace LoadingScreenExample {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("MainScreenViewController")]
	public partial class MainScreenViewController {
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Export("convertingCelcius:")]
		partial void convertingCelcius (MonoTouch.UIKit.UIButton sender);

		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				return ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
			}
			set {
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("convertButton")]
		private MonoTouch.UIKit.UIButton convertButton {
			get {
				return ((MonoTouch.UIKit.UIButton)(this.GetNativeField("convertButton")));
			}
			set {
				this.SetNativeField("convertButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("convertTextbox")]
		private MonoTouch.UIKit.UITextField convertTextbox {
			get {
				return ((MonoTouch.UIKit.UITextField)(this.GetNativeField("convertTextbox")));
			}
			set {
				this.SetNativeField("convertTextbox", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("loadingIndicator")]
		private MonoTouch.UIKit.UIActivityIndicatorView loadingIndicator {
			get {
				return ((MonoTouch.UIKit.UIActivityIndicatorView)(this.GetNativeField("loadingIndicator")));
			}
			set {
				this.SetNativeField("loadingIndicator", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("loadingView")]
		private MonoTouch.UIKit.UIImageView loadingView {
			get {
				return ((MonoTouch.UIKit.UIImageView)(this.GetNativeField("loadingView")));
			}
			set {
				this.SetNativeField("loadingView", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("loadingMessage")]
		private MonoTouch.UIKit.UILabel loadingMessage {
			get {
				return ((MonoTouch.UIKit.UILabel)(this.GetNativeField("loadingMessage")));
			}
			set {
				this.SetNativeField("loadingMessage", value);
			}
		}
	}
}
